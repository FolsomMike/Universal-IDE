/******************************************************************************
* Title: Universal IDE - Main.java
* Author: Mike Schoonover
* Date: 06/4/11
*
* Purpose:
*
* This program provides a basic IDE which can be extended to handle various
* projects which utilize multiple files, such as a compiler or assembler.
*
* 6/4/11
*  Handles TI TMS320C5441 DSP.
*
* Open Source Policy:
*
* This source code is Public Domain and free to any interested party.  Any
* person, company, or organization may do with it as they please.
*
*/

//-----------------------------------------------------------------------------

package basicide;

//-----------------------------------------------------------------------------
// class MainWindow
//
// Creates a main window JFrame.  Creates all other objects needed by the
// program.
//
// Listens for events generated by the main window.  Calls clean up functions
// on program exit.
//

class MainWindow {

MainFrame mainFrame;

//-----------------------------------------------------------------------------
// MainWindow::MainWindow (constructor)
//

public MainWindow()
{

}//end of MainWindow::MainWindow (constructor)
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
// MainWindow::init
//
// Call this after construction to setup the object
//

public void init()
{

    //create the program's main window
    mainFrame = new MainFrame("TI DSP Dev Tool");
    mainFrame.init();

}//end of MainWindow::init
//-----------------------------------------------------------------------------

}//end of class MainWindow
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------s

//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
// class Main
//

public class Main{

//-----------------------------------------------------------------------------
// Main::createAndShowGUI
//
// Create the GUI and show it. For thread safety, this method should be invoked
// from the event-dispatching thread.  This is usually done by using
// invokeLater to schedule this funtion to be called from inside the event-
// dispatching thread.  This is necessary because the main function is not
// operating in the event-dispatching thread.  See the main function for more
// info.
//

private static void createAndShowGUI()
{

    //instantiate an object to create and handle the main window JFrame
    MainWindow mainWindow = new MainWindow();

    //set up the new object
    mainWindow.init();

}//end of Main::createAndShowGUI
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
// Main::main
//

public static void main(String[] args)
{

    //Schedule a job for the event-dispatching thread:
    //creating and showing this application's GUI.

    javax.swing.SwingUtilities.invokeLater(
            new Runnable() {
                @Override
                public void run() { createAndShowGUI(); } });

}//end of Main::main
//-----------------------------------------------------------------------------

}//end of class Main
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------

